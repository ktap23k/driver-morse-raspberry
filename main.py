# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QMainWindow

class Ui_MainWindow(QMainWindow):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(512, 462)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.bntGet = QtWidgets.QPushButton(self.centralwidget)
        self.bntGet.setGeometry(QtCore.QRect(10, 90, 111, 51))
        self.bntGet.setObjectName("bntGet")
        self.inputTextButton = QtWidgets.QLineEdit(self.centralwidget)
        self.inputTextButton.setGeometry(QtCore.QRect(130, 90, 361, 51))
        self.inputTextButton.setReadOnly(True)
        self.inputTextButton.setObjectName("inputTextButton")
        self.bntDe = QtWidgets.QPushButton(self.centralwidget)
        self.bntDe.setGeometry(QtCore.QRect(10, 270, 111, 51))
        self.bntDe.setObjectName("bntDe")
        self.textDecode = QtWidgets.QLineEdit(self.centralwidget)
        self.textDecode.setGeometry(QtCore.QRect(130, 270, 361, 51))
        self.textDecode.setObjectName("textDecode")
        self.bntEn = QtWidgets.QPushButton(self.centralwidget)
        self.bntEn.setGeometry(QtCore.QRect(10, 180, 111, 51))
        self.bntEn.setObjectName("bntEn")
        self.textEncode = QtWidgets.QLineEdit(self.centralwidget)
        self.textEncode.setGeometry(QtCore.QRect(130, 180, 361, 51))
        self.textEncode.setObjectName("textEncode")
        self.bntBlink = QtWidgets.QPushButton(self.centralwidget)
        self.bntBlink.setGeometry(QtCore.QRect(10, 360, 111, 51))
        self.bntBlink.setObjectName("bntBlink")
        self.textBlink = QtWidgets.QLineEdit(self.centralwidget)
        self.textBlink.setGeometry(QtCore.QRect(130, 360, 361, 51))
        self.textBlink.setObjectName("textBlink")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(110, 10, 311, 51))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 512, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.bntGet.clicked.connect(self.pushButton)
        self.bntEn.clicked.connect(self.encodeMorse)
        self.bntDe.clicked.connect(self.decodeMorse)
        self.bntBlink.clicked.connect(self.blink)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
    
    def blink(self):
        '''blink led flow morse'''
        if self.validation_de(self.textBlink.text()):
            self.textEncode.setText(self.textBlink.text())
            self.decodeMorse()
            self.encodeMorse()
        elif self.validation_en(self.textBlink.text()):
            self.textDecode.setText(self.textBlink.text())
            self.encodeMorse()
        else:
            QMessageBox.about(self, "Error", "Data Error!")
        
    
    def validation_de(self, string):
        '''Check data is string '''
        from checkData import Check
        return Check().checkMorseTrue(string)

    def decodeMorse(self):
        '''decode data from encode, if encode null decode on getMorse from button'''
        import morse
        self.decode_ = 'Error data!'
        if self.textEncode.text():
            if self.validation_de(self.textEncode.text()):
                self.decode_ = morse.decrypt(self.textEncode.text())

        elif self.inputTextButton.text():
            if self.validation_de(self.inputTextButton.text()):
                self.decode_ = morse.decrypt(self.inputTextButton.text())
        self.textDecode.setText(self.decode_)
        if self.decode_ != 'Error data!':
            QMessageBox.about(self, "Done", "Done!")
        else:
            QMessageBox.about(self, "Error", "Error!")

    def validation_en(self, string):
        '''Check data is morse '''
        from checkData import Check
        return Check().checkStringTrue(string)

    def encodeMorse(self):
        '''encode data from decode '''
        import morse
        self.encode_ = 'Error data!'
        if self.validation_en(self.textDecode.text()):
            self.encode_ = morse.encrypt(self.textDecode.text())
        self.textEncode.setText(self.encode_)

        if self.encode_ != 'Error data!':
            QMessageBox.about(self, "Done", "Done!")
        else:
            QMessageBox.about(self, "Error", "Error!")

    def pushButton(self):
        ''' Get morse on push button'''
        QMessageBox.about(self, "Get Morse", "Begin listen button push!")
        from threading import Thread
        self.inputTextButton.setText('')
        self.morse = "Error! Don't get input on button."
        thread = Thread(name='daemon', target=self.get_push)
        thread.start()
        thread.join()
        self.inputTextButton.setText(self.morse)

        if self.morse != "Error! Don't get input on button.":
            QMessageBox.about(self, "Done", "Done!")
        else:
            QMessageBox.about(self, "Error", "Error!")

    def get_push(self):
        import pushButtonMorse as p
        self.morse = p.getMorse()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.bntGet.setText(_translate("MainWindow", "Get Morse"))
        self.bntDe.setText(_translate("MainWindow", "Decode Morse"))
        self.bntEn.setText(_translate("MainWindow", "Encode Morse"))
        self.bntBlink.setText(_translate("MainWindow", "Blink LED"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:20pt; font-weight:600; color:#ce5c00;\">Morse</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
