# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(512, 462)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.bntGet = QtWidgets.QPushButton(self.centralwidget)
        self.bntGet.setGeometry(QtCore.QRect(10, 90, 111, 51))
        self.bntGet.setObjectName("bntGet")
        self.inputTextButton = QtWidgets.QLineEdit(self.centralwidget)
        self.inputTextButton.setGeometry(QtCore.QRect(130, 90, 361, 51))
        self.inputTextButton.setReadOnly(True)
        self.inputTextButton.setObjectName("inputTextButton")
        self.bntDe = QtWidgets.QPushButton(self.centralwidget)
        self.bntDe.setGeometry(QtCore.QRect(10, 270, 111, 51))
        self.bntDe.setObjectName("bntDe")
        self.textDecode = QtWidgets.QLineEdit(self.centralwidget)
        self.textDecode.setGeometry(QtCore.QRect(130, 270, 361, 51))
        self.textDecode.setObjectName("textDecode")
        self.bntEn = QtWidgets.QPushButton(self.centralwidget)
        self.bntEn.setGeometry(QtCore.QRect(10, 180, 111, 51))
        self.bntEn.setObjectName("bntEn")
        self.textEncode = QtWidgets.QLineEdit(self.centralwidget)
        self.textEncode.setGeometry(QtCore.QRect(130, 180, 361, 51))
        self.textEncode.setObjectName("textEncode")
        self.bntBlink = QtWidgets.QPushButton(self.centralwidget)
        self.bntBlink.setGeometry(QtCore.QRect(10, 360, 111, 51))
        self.bntBlink.setObjectName("bntBlink")
        self.textBlink = QtWidgets.QLineEdit(self.centralwidget)
        self.textBlink.setGeometry(QtCore.QRect(130, 360, 361, 51))
        self.textBlink.setObjectName("textBlink")
        self.textBrowser = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser.setGeometry(QtCore.QRect(110, 10, 311, 51))
        self.textBrowser.setObjectName("textBrowser")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 512, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.bntGet.setText(_translate("MainWindow", "Get Morse"))
        self.bntDe.setText(_translate("MainWindow", "Decode Morse"))
        self.bntEn.setText(_translate("MainWindow", "Encode Morse"))
        self.bntBlink.setText(_translate("MainWindow", "Blink LED"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:11pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:20pt; font-weight:600; color:#ce5c00;\">Morse</span></p></body></html>"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
